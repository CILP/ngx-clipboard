/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './clipboard.directive';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import3 from '@angular/core/src/linker/view_utils';
var Wrapper_ClipboardDirective = (function () {
    function Wrapper_ClipboardDirective(p0) {
        this._changed = false;
        this.context = new import0.ClipboardDirective(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_ClipboardDirective.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ClipboardDirective.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_ClipboardDirective.prototype.check_targetElm = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.targetElm = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ClipboardDirective.prototype.check_cbContent = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.cbContent = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_ClipboardDirective.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_ClipboardDirective.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ClipboardDirective.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ClipboardDirective.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.onSuccess.subscribe(_eventHandler.bind(view, 'cbOnSuccess')));
        }
        if (emit1) {
            (this.subscription1 = this.context.onError.subscribe(_eventHandler.bind(view, 'cbOnError')));
        }
    };
    return Wrapper_ClipboardDirective;
}());
export { Wrapper_ClipboardDirective };
//# sourceMappingURL=D:/Users/saml/Documents/GitHub/angular2-clipboard/clipboard.directive.ngfactory.js.map